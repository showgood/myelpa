(1
 (ac-php-core . [(20180918 848) ((emacs (24)) (dash (1)) (php-mode (1)) (xcscope (1)) (s (1)) (f (0 17 0)) (popup (0 5 0))) "gen tags for php" tar])
 (ace-link . [(20180308 900) ((avy (0 4 0))) "Quickly follow links" tar])
 (ace-window . [(20180814 1516) ((avy (0 2 0))) "Quickly switch windows." tar])
 (ag . [(20180225 1040) ((dash (2 8 0)) (s (1 9 0)) (cl-lib (0 5))) "A front-end for ag ('the silver searcher'), the C ack replacement." tar])
 (all-the-icons . [(20180125 1557) ((emacs (24 3)) (memoize (1 0 1))) "A library for inserting Developer icons" tar])
 (all-the-icons-dired . [(20170418 2131) ((emacs (24 4)) (all-the-icons (2 2 0))) "Shows icons for each file in dired mode" tar])
 (android-mode . [(20170323 815) nil "Minor mode for Android application development" tar])
 (anki-editor . [(20180923 1841) ((emacs (25)) (request (0 3 0)) (dash (2 12 0))) "Minor mode for making Anki cards with Org" tar])
 (anzu . [(20161017 1607) ((emacs (24 3))) "Show number of matches in mode-line while searching" tar])
 (async . [(20180527 1730) nil "Asynchronous processing in Emacs" tar])
 (atomic-chrome . [(20180617 724) ((emacs (24 3)) (let-alist (1 0 4)) (websocket (1 4))) "Edit Chrome text area with Emacs using Atomic Chrome" tar])
 (auctex . [(12 1 1) nil "Integrated environment for *TeX*" tar])
 (auto-compile . [(20180321 1507) ((emacs (24 3)) (packed (2 0 0))) "automatically compile Emacs Lisp libraries" tar])
 (auto-complete . [(20170125 245) ((popup (0 5 0)) (cl-lib (0 5))) "Auto Completion for GNU Emacs" tar])
 (auto-yasnippet . [(20180503 1908) ((yasnippet (0 8 0))) "Quickly create disposable yasnippets" tar])
 (avy . [(20181001 837) ((emacs (24 1)) (cl-lib (0 5))) "Jump to arbitrary positions in visible text and select text quickly." tar])
 (beacon . [(20180706 1725) ((seq (2 14))) "Highlight the cursor whenever the window scrolls" tar])
 (biblio . [(20161014 2304) ((emacs (24 3)) (biblio-core (0 2))) "Browse and import bibliographic references from CrossRef, arXiv, DBLP, HAL, Dissemin, and doi.org" tar])
 (biblio-core . [(20160901 1815) ((emacs (24 3)) (let-alist (1 0 4)) (seq (1 11)) (dash (2 12 1))) "A framework for looking up and displaying bibliographic entries" tar])
 (bind-key . [(20180513 430) nil "A simple way to manage personal keybindings" tar])
 (bookmark+ . [(20180424 1212) nil "Bookmark+: extensions to standard library `bookmark.el'." tar])
 (ccls . [(20181002 711) ((emacs (25 1)) (lsp-mode (4 2)) (dash (0 14)) (projectile (1 0 0))) "ccls client for lsp-mode" tar])
 (cider . [(20180930 1836) ((emacs (25)) (clojure-mode (5 9)) (pkg-info (0 4)) (queue (0 2)) (spinner (1 7)) (seq (2 16)) (sesman (0 3))) "Clojure Interactive Development Environment that Rocks" tar])
 (clang-format . [(20180406 1514) ((cl-lib (0 3))) "Format code using clang-format" tar])
 (clj-refactor . [(20180826 2149) ((emacs (25 1)) (seq (2 19)) (yasnippet (0 6 1)) (paredit (24)) (multiple-cursors (1 2 2)) (clojure-mode (5 6 1)) (cider (0 17 0)) (edn (1 1 2)) (inflections (2 3)) (hydra (0 13 2))) "A collection of commands for refactoring Clojure code" tar])
 (clojure-mode . [(20181001 1902) ((emacs (25 1))) "Major mode for Clojure code" tar])
 (cmake-mode . [(20180709 1426) nil "major-mode for editing CMake sources" tar])
 (coffee-mode . [(20170324 940) ((emacs (24 3))) "Major mode for CoffeeScript code" tar])
 (command-log-mode . [(20160413 447) nil "log keyboard commands to buffer" tar])
 (company . [(20180913 2311) ((emacs (24 3))) "Modular text completion framework" tar])
 (company-auctex . [(20180725 1912) ((yasnippet (0 8 0)) (company (0 8 0)) (auctex (11 87))) "Companycompletion for AUCTeX" tar])
 (company-dict . [(20180216 956) ((emacs (24 4)) (company (0 8 12)) (parent-mode (2 3))) "A backend that emulates acdictionary" tar])
 (company-ghc . [(20170918 833) ((cl-lib (0 5)) (company (0 8 0)) (ghc (5 4 0 0)) (emacs (24))) "companymod backend" tar])
 (company-go . [(20170825 1643) ((company (0 8 0)) (go-mode (1 0 0))) "company-mode backend for Go (using gocode)" tar])
 (company-inf-ruby . [(20140805 2054) ((company (0 6 10)) (inf-ruby (2 2 7)) (emacs (24 1))) "companyruby" tar])
 (company-lsp . [(20180917 2244) ((emacs (25 1)) (lsp-mode (3 4)) (company (0 9 0)) (s (1 2 0)) (dash (2 11 0))) "Company completion backend for lsp-mode." tar])
 (company-lua . [(20171108 2306) ((company (0 8 12)) (s (1 10 0)) (f (0 17 0)) (lua-mode (20151025))) "Company backend for Lua" tar])
 (company-php . [(20180510 2200) ((cl-lib (0 5)) (ac-php-core (1)) (company (0 9))) "company completion source for php" tar])
 (company-quickhelp . [(20180525 1003) ((emacs (24 3)) (company (0 8 9)) (pos-tip (0 4 6))) "Popup documentation for completion candidates" tar])
 (company-racer . [(20171205 310) ((emacs (24 4)) (cl-lib (0 5)) (company (0 8 0)) (deferred (0 3 1))) "Company integration for racer" tar])
 (company-restclient . [(20151202 1201) ((cl-lib (0 5)) (company (0 8 0)) (emacs (24)) (know-your-http-well (0 2 0)) (restclient (0 0 0))) "companymode" tar])
 (company-shell . [(20170518 541) ((emacs (24 4)) (company (0 8 12)) (dash (2 12 0)) (cl-lib (0 5))) "Company mode backend for shell functions" tar])
 (company-sourcekit . [(20170126 1153) ((emacs (24 3)) (company (0 8 12)) (dash (2 12 1)) (dash-functional (1 2 0)) (sourcekit (0 2 0))) "company-mode completion backend for SourceKit" tar])
 (company-statistics . [(20170210 1933) ((emacs (24 3)) (company (0 8 5))) "Sort candidates using completion history" tar])
 (company-tern . [(20161004 1847) ((company (0 8 0)) (tern (0 0 1)) (dash (2 8 0)) (dash-functional (2 8 0)) (s (1 9 0)) (cl-lib (0 5 0))) "Tern backend for company-mode" tar])
 (company-web . [(20180402 1155) ((company (0 8 0)) (dash (2 8 0)) (cl-lib (0 5 0)) (web-completion-data (0 1 0))) "Company version of ac-html, complete for web,html,emmet,jade,slim modes" tar])
 (counsel . [(20180927 942) ((emacs (24 3)) (swiper (0 9 0))) "Various completion functions using Ivy" tar])
 (counsel-css . [(20180302 536) ((emacs (24 4)) (counsel (0 7 0)) (cl-lib (0 5))) "stylesheetaware swiper" tar])
 (counsel-dash . [(20160729 1529) ((emacs (24 4)) (dash (2 12 1)) (dash-functional (1 2 0)) (helm-dash (1 3 0)) (counsel (0 8 0))) "Browse dash docsets using Ivy" tar])
 (counsel-etags . [(20180807 555) ((emacs (24 4)) (counsel (0 9 1))) "Fast and complete Ctags/Etags solution using ivy" tar])
 (counsel-projectile . [(20180922 1452) ((counsel (0 10 0)) (projectile (1 0 0))) "Ivy integration for Projectile" tar])
 (csharp-mode . [(20180831 1024) nil "C# mode derived mode" tar])
 (dash . [(20180910 1856) nil "A modern list library for Emacs" tar])
 (dash-at-point . [(20180710 1356) nil "Search the word at point with Dash" tar])
 (dash-functional . [(20180107 1618) ((dash (2 0 0)) (emacs (24))) "Collection of useful combinators for Emacs Lisp" tar])
 (deadgrep . [(20181002 519) ((emacs (25 1)) (dash (2 12 0)) (s (1 11 0)) (spinner (1 7 3))) "fast, friendly searching with ripgrep" tar])
 (deferred . [(20170901 1330) ((emacs (24 4))) "Simple asynchronous functions for emacs lisp" tar])
 (deft . [(20180902 1302) nil "quickly browse, filter, and edit plain text notes" tar])
 (demangle-mode . [(20180516 245) ((cl-lib (0 1)) (emacs (24))) "Automatically demangle C++ symbols" tar])
 (dired+ . [(20180325 1418) nil "Extensions to Dired." tar])
 (dired-hacks-utils . [(20160527 2136) ((dash (2 5 0))) "Utilities and helpers for dired-hacks collection" tar])
 (dired-k . [(20170313 1503) ((emacs (24 3))) "highlight dired buffer by file size, modified time, git status" tar])
 (dired-quick-sort . [(20161208 2112) ((hydra (0 13 0))) "Persistent quick sorting of dired buffers in various ways." tar])
 (dired-sidebar . [(20181003 716) ((emacs (25 1)) (dired-subtree (0 0 1))) "Tree browser leveraging dired" tar])
 (dired-subtree . [(20180922 1615) ((dash (2 5 0)) (dired-hacks-utils (0 0 1))) "Insert subdirectories in a tree-like fashion" tar])
 (disaster . [(20171016 2152) nil "Disassemble C/C++ code under cursor in Emacs" tar])
 (dockerfile-mode . [(20180914 1116) ((emacs (24)) (s (1 12))) "Major mode for editing Docker's Dockerfiles" tar])
 (doom-themes . [(20180930 1744) ((emacs (24 4)) (all-the-icons (1 0 0)) (cl-lib (0 5))) "an opinionated pack of modern color-themes" tar])
 (dumb-jump . [(20180930 550) ((emacs (24 3)) (f (0 20 0)) (s (1 11 0)) (dash (2 9 0)) (popup (0 5 3))) "jump to definition for multiple languages without configuration." tar])
 (eacl . [(20180607 1358) ((emacs (24 3)) (ivy (0 9 1))) "Auto-complete line(s) by grepping project" tar])
 (editorconfig . [(20180925 926) ((cl-lib (0 5))) "EditorConfig Emacs Plugin" tar])
 (edn . [(20160215 1219) ((cl-lib (0 3)) (emacs (24 1)) (peg (0 6))) "Support for reading and writing the edn data format from elisp" tar])
 (eldoc-eval . [(20180607 1157) nil "Enable eldoc support when minibuffer is in use." tar])
 (elisp-refs . [(20180923 941) ((dash (2 12 0)) (loop (1 2)) (s (1 11 0))) "find callers of elisp functions or macros" tar])
 (elm-mode . [(20181001 2151) ((f (0 17)) (let-alist (1 0 4)) (seq (2 2)) (s (1 7 0)) (emacs (24 4)) (dash (2 13 0))) "Major mode for Elm" tar])
 (elpa-mirror . [(20180301 36) ((emacs (24 4))) "Create local package repository so package upgrade never breaks" tar])
 (elpy . [(20180924 1634) ((company (0 9 2)) (emacs (24 4)) (find-file-in-project (3 3)) (highlight-indentation (0 5 0)) (pyvenv (1 3)) (yasnippet (0 8 0)) (s (1 11 0))) "Emacs Python Development Environment" tar])
 (emmet-mode . [(20180613 341) nil "Unofficial Emmet's support for emacs" tar])
 (engine-mode . [(20180401 1646) ((cl-lib (0 5))) "Define and query search engines from within Emacs." tar])
 (epl . [(20180205 2049) ((cl-lib (0 3))) "Emacs Package Library" tar])
 (eslintd-fix . [(20180429 1455) ((dash (2 12 0)) (emacs (24 3))) "use eslint_d to automatically fix js files" tar])
 (evil . [(20180914 1216) ((emacs (24 1)) (undo-tree (0 6 3)) (goto-chg (1 6)) (cl-lib (0 5))) "Extensible Vi layer for Emacs." tar])
 (evil-anzu . [(20170124 718) ((evil (1 0 0)) (anzu (0 46))) "anzu for evil-mode" tar])
 (evil-commentary . [(20170413 1451) ((evil (1 0 0))) "Comment stuff out. A port of vim-commentary." tar])
 (evil-ediff . [(20170724 1923) ((evil (1 2 3))) "Make ediff a little evil" tar])
 (evil-escape . [(20180910 1234) nil "No description available." tar])
 (evil-exchange . [(20170511 259) ((evil (1 2 8)) (cl-lib (0 3))) "Exchange text more easily within Evil" tar])
 (evil-goggles . [(20180725 952) ((emacs (24 4)) (evil (1 0 0))) "Add a visual hint to evil operations" tar])
 (evil-ledger . [(20180802 1612) ((emacs (24 4)) (evil (1 2 12)) (ledger-mode (0))) "Make `ledger-mode' more `evil'." tar])
 (evil-magit . [(20180702 1553) ((evil (1 2 3)) (magit (2 6 0))) "evil-based key bindings for magit" tar])
 (evil-matchit . [(20180919 957) ((evil (1 0 7))) "Vim matchit ported to Evil" tar])
 (evil-mc . [(20180921 1727) ((emacs (24 3)) (evil (1 2 13)) (cl-lib (0 5))) "Multiple cursors for evil-mode" tar])
 (evil-multiedit . [(20180210 219) ((emacs (24 4)) (evil (1 2 12)) (iedit (0 97)) (cl-lib (0 5))) "multiple cursors for evil-mode" tar])
 (evil-numbers . [(20140606 1251) nil "increment/decrement numbers like in vim" tar])
 (evil-org . [(20180323 2306) ((emacs (24 4)) (evil (1 0))) "evil keybindings for org-mode" tar])
 (evil-replace-with-register . [(20170713 925) ((evil (1 0 8))) "Port of vim plugin ReplaceWithRegister" tar])
 (evil-snipe . [(20180731 1731) ((emacs (24 4)) (evil (1 2 12)) (cl-lib (0 5))) "emulate vimseek" tar])
 (evil-surround . [(20180102 1401) ((evil (1 2 12))) "emulate surround.vim from Vim" tar])
 (evil-textobj-anyblock . [(20170905 1907) ((cl-lib (0 5)) (evil (1 1 0))) "Textobject for the closest user-defined blocks." tar])
 (evil-vimish-fold . [(20171030 1151) ((emacs (24 4)) (evil (1 0 0)) (vimish-fold (0 2 0))) "Integrate vimish-fold with evil" tar])
 (evil-visual-mark-mode . [(20150202 1800) ((evil (1 0 9)) (dash (2 10))) "Display evil marks on buffer" tar])
 (evil-visualstar . [(20160223 48) ((evil (0))) "Starts a * or # search from the visual selection" tar])
 (exec-path-from-shell . [(20180324 204) nil "Get environment variables such as $PATH from the shell" tar])
 (expand-region . [(20180817 1134) nil "Increase selected region by semantic units." tar])
 (f . [(20180106 922) ((s (1 7 0)) (dash (2 2 0))) "Modern API for working with files and directories" tar])
 (fancy-narrow . [(20171031 16) nil "narrowregion with more eye candy." tar])
 (feature-mode . [(20170907 1448) nil "Major mode for editing Gherkin (i.e. Cucumber) user stories" tar])
 (find-file-in-project . [(20180912 1218) ((ivy (0 10 0)) (emacs (24 3))) "Find file/directory and review Diff/Patch/Commit efficiently everywhere" tar])
 (flycheck . [(20180907 1319) ((dash (2 12 1)) (pkg-info (0 4)) (let-alist (1 0 4)) (seq (1 11)) (emacs (24 3))) "Onfly syntax checking" tar])
 (flycheck-cask . [(20160928 926) ((emacs (24 1)) (flycheck (0 14)) (dash (2 4 0))) "Cask support in Flycheck" tar])
 (flycheck-elm . [(20181001 242) ((flycheck (0 29 -4)) (emacs (24 4)) (let-alist (1 0 5)) (seq (2 20))) "Flycheck support for the elm language" tar])
 (flycheck-ledger . [(20180819 321) ((flycheck (0 15))) "Flycheck integration for ledger files" tar])
 (flycheck-perl6 . [(20180509 2201) ((emacs (24 3)) (flycheck (0 22))) "Perl 6 support in Flycheck" tar])
 (flycheck-plantuml . [(20171018 111) ((flycheck (0 24)) (emacs (24 4)) (plantuml-mode (1 2 2))) "Integrate plantuml with flycheck" tar])
 (flycheck-pos-tip . [(20180610 1615) ((emacs (24 1)) (flycheck (0 22)) (pos-tip (0 4 6))) "Display Flycheck errors in GUI tooltips" tar])
 (flycheck-rust . [(20180904 1117) ((emacs (24 1)) (flycheck (28)) (dash (2 13 0)) (seq (2 3)) (let-alist (1 0 4))) "Flycheck: Rust additions and Cargo support" tar])
 (flyspell-correct . [(20180930 1559) nil "correcting words with flyspell via custom interface" tar])
 (flyspell-correct-ivy . [(20180929 1331) ((flyspell-correct (0 5 0)) (ivy (0 8 0))) "correcting words with flyspell via ivy interface" tar])
 (fringe-helper . [(20140620 2109) nil "helper functions for fringe bitmaps" tar])
 (general . [(20180901 1552) ((emacs (24 4)) (cl-lib (0 5))) "Convenience wrappers for keybindings." tar])
 (gh . [(20180308 2138) ((emacs (24 3)) (pcache (0 4 1)) (logito (0 1)) (marshal (0 6 3))) "A GitHub library for Emacs" tar])
 (ghc . [(20180121 1218) ((haskell-mode (13 0))) "Sub mode for Haskell mode" tar])
 (ghub . [(20181003 1456) ((emacs (24 4)) (dash (2 14 1)) (graphql (0 1)) (let-alist (1 0 5)) (treepy (0 1 0))) "Minuscule client libraries for Git forge APIs." tar])
 (gist . [(20171128 406) ((emacs (24 1)) (gh (0 10 0))) "Emacs integration for gist.github.com" tar])
 (git-commit . [(20180912 1012) ((emacs (25 1)) (dash (20180413)) (with-editor (20180414))) "Edit Git commit messages" tar])
 (git-gutter . [(20161105 1356) ((emacs (24 3))) "Port of Sublime Text plugin GitGutter" tar])
 (git-gutter-fringe . [(20170113 533) ((git-gutter (0 88)) (fringe-helper (0 1 1)) (cl-lib (0 5)) (emacs (24))) "Fringe version of git-gutter.el" tar])
 (git-link . [(20180708 1643) ((emacs (24 3))) "Get the GitHub/Bitbucket/GitLab URL for a buffer location" tar])
 (git-timemachine . [(20180607 820) ((emacs (24 3))) "Walk through git revisions of a file" tar])
 (gitconfig-mode . [(20180318 1956) nil "Major mode for editing .gitconfig files" tar])
 (gitignore-mode . [(20180318 1956) nil "Major mode for editing .gitignore files" tar])
 (go-eldoc . [(20170305 1427) ((emacs (24 3)) (go-mode (1 0 0))) "eldoc for go-mode" tar])
 (go-guru . [(20180628 1010) ((go-mode (1 3 1)) (cl-lib (0 5))) "Integration of the Go 'guru' analysis tool into Emacs." tar])
 (go-mode . [(20180327 1530) nil "Major mode for the Go programming language" tar])
 (gorepl-mode . [(20170905 945) ((emacs (24)) (s (1 11 0)) (f (0 19 0)) (hydra (0 13 0))) "Go REPL Interactive Development in top of Gore" tar])
 (goto-chg . [(20180105 1833) nil "goto last change" tar])
 (graphql . [(20180912 31) ((emacs (25))) "GraphQL utilities" tar])
 (groovy-mode . [(20180810 607) ((s (1 12 0)) (emacs (24 3)) (dash (2 13 0))) "Major mode for Groovy source files" tar])
 (haml-mode . [(20170924 453) ((emacs (24)) (cl-lib (0 5))) "Major mode for editing Haml files" tar])
 (haskell-mode . [(20180917 923) ((emacs (24 3))) "A Haskell editing mode" tar])
 (helm . [(20181002 459) ((emacs (24 4)) (async (1 9 3)) (popup (0 5 3)) (helm-core (3 0))) "Helm is an Emacs incremental and narrowing framework" tar])
 (helm-core . [(20180826 515) ((emacs (24 4)) (async (1 9 3))) "Development files for Helm" tar])
 (helm-dash . [(20180503 918) ((helm (1 9 2)) (cl-lib (0 5))) "Offline documentation browser for +150 APIs using Dash docsets." tar])
 (helpful . [(20181002 605) ((emacs (25 1)) (dash (2 12 0)) (dash-functional (1 2 0)) (s (1 11 0)) (f (0 20 0)) (elisp-refs (1 2)) (shut-up (0 3))) "a better *help* buffer" tar])
 (highlight-indentation . [(20171218 937) nil "Minor modes for highlighting indentation" tar])
 (highlight-numbers . [(20170905 1042) ((emacs (24)) (parent-mode (2 0))) "Highlight numbers in source code" tar])
 (highlight-quoted . [(20140916 1822) ((emacs (24))) "Highlight Lisp quotes and quoted symbols" tar])
 (hindent . [(20180518 902) ((cl-lib (0 5))) "Indent haskell code using the hindent program" tar])
 (hl-anything . [(20160422 1708) ((emacs (24 3))) "Highlight symbols, selections, enclosing parens and more." tar])
 (hl-todo . [(20181003 1521) nil "highlight TODO and similar keywords" tar])
 (ht . [(20180129 2234) ((dash (2 12 0))) "The missing hash table library for Emacs" tar])
 (htmlize . [(20180923 1829) nil "Convert buffer text and decorations to HTML." tar])
 (hy-mode . [(20180702 1940) ((dash (2 13 0)) (dash-functional (1 2 0)) (s (1 11 0)) (emacs (24))) "Major mode for Hylang" tar])
 (hydra . [(20180918 1529) ((cl-lib (0 5))) "Make bindings that stick around." tar])
 (iedit . [(20180919 323) nil "Edit multiple regions in the same way simultaneously." tar])
 (imenu-anywhere . [(20170805 1855) ((cl-lib (0 5))) "ido/ivy/helm imenu across same mode/project/etc buffers" tar])
 (imenu-list . [(20180601 1402) ((cl-lib (0 5))) "Show imenu entries in a separate buffer" tar])
 (impatient-mode . [(20181002 1231) ((cl-lib (0 3)) (simple-httpd (1 5 0)) (htmlize (1 40))) "Serve buffers live over HTTP" tar])
 (inf-ruby . [(20180521 1348) nil "Run a Ruby process in a buffer" tar])
 (inflections . [(20170913 916) ((cl-lib (0 5)) (emacs (24))) "convert english words between singular and plural" tar])
 (interleave . [(20171004 624) nil "Interleaving text books since 2015" tar])
 (intero . [(20180806 2145) ((flycheck (0 25)) (company (0 8)) (emacs (24 4)) (haskell-mode (13 0))) "Complete development mode for Haskell" tar])
 (ivy . [(20180926 1249) ((emacs (24 1))) "Incremental Vertical completYon" tar])
 (ivy-bibtex . [(20180826 1548) ((swiper (0 7 0)) (parsebib (1 0)) (s (1 9 0)) (dash (2 6 0)) (f (0 16 2)) (cl-lib (0 5)) (biblio (0 2))) "A bibliography manager based on Ivy" tar])
 (ivy-hydra . [(20180614 2200) ((emacs (24 1)) (ivy (0 9 0)) (hydra (0 13 4))) "Additional key bindings for Ivy" tar])
 (ivy-xref . [(20180821 1211) ((emacs (25 1)) (ivy (0 10 0))) "Ivy interface for xref results" tar])
 (js2-mode . [(20180724 801) ((emacs (24 1)) (cl-lib (0 5))) "Improved JavaScript editing mode" tar])
 (js2-refactor . [(20180502 1042) ((js2-mode (20101228)) (s (1 9 0)) (multiple-cursors (1 0 0)) (dash (1 0 0)) (s (1 0 0)) (yasnippet (0 9 0 1))) "A JavaScript refactoring library for emacs." tar])
 (json-mode . [(20180718 809) ((json-reformat (0 0 5)) (json-snatcher (1 0 0))) "Major mode for editing JSON files." tar])
 (json-reformat . [(20160212 853) nil "Reformatting tool for JSON" tar])
 (json-snatcher . [(20150512 347) ((emacs (24))) "Grabs the path to JSON values in a JSON file" tar])
 (julia-mode . [(20180816 2117) nil "Major mode for editing Julia source code" tar])
 (know-your-http-well . [(20160208 2304) nil "Look up the meaning of HTTP headers, methods, relations, status codes" tar])
 (langtool . [(20180409 1016) ((cl-lib (0 3))) "Grammar check utility using LanguageTool" tar])
 (ledger-mode . [(20180929 507) ((emacs (24 3))) "Helper code for use with the ledger command-line tool" tar])
 (lispy . [(20181003 1857) ((emacs (24 1)) (ace-window (0 9 0)) (iedit (0 9 9)) (swiper (0 7 0)) (hydra (0 13 4)) (zoutline (0 1 0))) "vi-like Paredit" tar])
 (lispyville . [(20180704 1158) ((lispy (0)) (evil (1 2 12)) (cl-lib (0 5)) (emacs (24 4))) "A minor mode for integrating evil with lispy." tar])
 (list-utils . [(20160414 1402) nil "List-manipulation utility functions" tar])
 (logito . [(20120225 2055) ((eieio (1 3))) "logging library for Emacs" tar])
 (loop . [(20160813 1407) nil "friendly imperative loop structures" tar])
 (lsp-mode . [(20181003 1559) ((emacs (25 1))) "Minor mode for interacting with Language Servers" tar])
 (lsp-ui . [(20181003 1712) ((emacs (25 1)) (dash (2 14)) (dash-functional (1 2 0)) (flycheck (31)) (lsp-mode (4 2)) (markdown-mode (2 3))) "UI modules for lsp-mode" tar])
 (lua-mode . [(20180323 1021) nil "a major-mode for editing Lua scripts" tar])
 (macrostep . [(20161120 2106) ((cl-lib (0 5))) "interactive macro expander" tar])
 (magit . [(20180928 1153) ((emacs (25 1)) (async (20180527)) (dash (20180413)) (ghub (20180417)) (git-commit (20180602)) (magit-popup (20180509)) (with-editor (20180414))) "A Git porcelain inside Emacs." tar])
 (magit-popup . [(20181003 921) ((emacs (24 4)) (async (1 9 2)) (dash (2 13 0))) "Define prefixsuffix command combos" tar])
 (makefile-executor . [(20180720 832) ((emacs (24 3)) (dash (2 11 0)) (f (0 11 0)) (s (1 10 0))) "Commands for conveniently running makefile targets" tar])
 (markdown-mode . [(20180904 1601) ((emacs (24 4)) (cl-lib (0 5))) "Major mode for Markdown-formatted text" tar])
 (markdown-toc . [(20170711 1949) ((s (1 9 0)) (dash (2 11 0)) (markdown-mode (2 1))) "A simple TOC generator for markdown file" tar])
 (marshal . [(20180124 1239) ((eieio (1 4)) (json (1 3)) (ht (2 1))) "eieio extension for automatic (un)marshalling" tar])
 (meghanada . [(20180910 231) ((emacs (24 3)) (yasnippet (0 6 1)) (company (0 9 0)) (flycheck (0 23))) "A better java development mode" tar])
 (memoize . [(20180614 1930) nil "Memoization functions" tar])
 (modern-cpp-font-lock . [(20180110 2031) nil "Font-locking for Modern C++" tar])
 (moonscript . [(20170831 2226) ((cl-lib (0 5)) (emacs (24))) "Major mode for editing MoonScript code" tar])
 (move-text . [(20170909 330) nil "Move current line or region with Mdown." tar])
 (multi-term . [(20160619 933) nil "Managing multiple terminal buffers in Emacs." tar])
 (multiple-cursors . [(20180913 1237) ((cl-lib (0 5))) "Multiple cursors for Emacs." tar])
 (nav-flash . [(20140508 2041) nil "Briefly highlight the current line" tar])
 (nodejs-repl . [(20180917 1702) nil "Run Node.js REPL" tar])
 (ob-go . [(20170731 1757) nil "org-babel functions for go evaluation" tar])
 (ob-ipython . [(20180224 953) ((s (1 9 0)) (dash (2 10 0)) (dash-functional (1 2 0)) (f (0 17 2)) (emacs (24))) "org-babel functions for IPython evaluation" tar])
 (ob-restclient . [(20180904 709) ((restclient (0))) "orgmode" tar])
 (ob-sql-mode . [(20180426 1911) ((emacs (24 4))) "SQL code blocks evaluated by sql-mode" tar])
 (omnisharp . [(20180805 1624) ((emacs (24 4)) (flycheck (30)) (dash (2 12 0)) (auto-complete (1 4)) (popup (0 5 1)) (csharp-mode (0 8 7)) (cl-lib (0 5)) (s (1 10 0)) (shut-up (0 3 2)) (f (0 19 0))) "Omnicompletion (intellisense) and more for C#" tar])
 (org . [(9 1 14) nil "Outline-based notes management and organizer" tar])
 (org-attach-screenshot . [(20180420 525) nil "screenshots integrated with org attachment dirs" tar])
 (org-bullets . [(20180208 2343) nil "Show bullets in org8 characters" tar])
 (org-download . [(20180925 1528) ((async (1 2))) "Image dragmode" tar])
 (org-plus-contrib . [(20180719 1153) nil "No description available." tar])
 (origami . [(20180101 1553) ((s (1 9 0)) (dash (2 5 0)) (emacs (24)) (cl-lib (0 5))) "Flexible text folding" tar])
 (osx-clipboard . [(20141012 717) nil "Use the OS X clipboard from terminal Emacs" tar])
 (overseer . [(20180226 619) ((emacs (24)) (dash (2 10 0)) (pkg-info (0 4)) (f (0 18 1))) "Ert-runner Integration Into Emacs" tar])
 (ox-gfm . [(20170628 2102) nil "Github Flavored Markdown Back-End for Org Export Engine" tar])
 (ox-pandoc . [(20180510 1338) ((org (8 2)) (emacs (24)) (dash (2 8)) (ht (2 0)) (cl-lib (0 5))) "org exporter for pandoc." tar])
 (packed . [(20180318 1729) ((emacs (24 3))) "package manager agnostic Emacs Lisp package utilities" tar])
 (paredit . [(20171127 205) nil "minor mode for editing parentheses" tar])
 (parent-mode . [(20150824 2300) nil "get major mode's parent modes" tar])
 (parsebib . [(20180116 1427) ((emacs (24 3))) "A library for parsing bib files" tar])
 (pass . [(20180201 1251) ((emacs (24 3)) (password-store (0 1)) (password-store-otp (0 1 5)) (f (0 17))) "Major mode for password-store.el" tar])
 (password-store . [(20170829 2333) ((emacs (24)) (f (0 11 0)) (s (1 9 0)) (with-editor (2 5 11))) "Password store (pass) support" tar])
 (password-store-otp . [(20180815 610) ((emacs (25)) (s (1 9 0)) (password-store (0 1))) "Password store (pass) OTP extension support" tar])
 (pcache . [(20170105 2214) ((eieio (1 3))) "persistent caching for Emacs." tar])
 (pcre2el . [(20161120 2103) ((emacs (24)) (cl-lib (0 3))) "regexp syntax converter" tar])
 (pdf-tools . [(20180925 715) ((emacs (24 3)) (tablist (0 70)) (let-alist (1 0 4))) "Support library for PDF documents." tar])
 (peep-dired . [(20160321 2237) nil "Peep at files in another window from dired buffers" tar])
 (peg . [(20150708 641) nil "Parsing Expression Grammars in Emacs Lisp" tar])
 (perl6-mode . [(20180619 1159) ((emacs (24 4)) (pkg-info (0 1))) "Major mode for editing Perl 6 code" tar])
 (persistent-soft . [(20150223 1853) ((pcache (0 3 1)) (list-utils (0 4 2))) "Persistent storage, returning nil on failure" tar])
 (persp-mode . [(20180930 1720) nil "windows/buffers sets shared among frames + save/load." tar])
 (php-boris . [(20130527 821) nil "Run boris php REPL" tar])
 (php-extras . [(20160518 1116) ((php-mode (1 5 0))) "Extra features for `php-mode'" tar])
 (php-mode . [(20180829 520) ((emacs (24 3)) (cl-lib (0 5))) "Major mode for editing PHP code" tar])
 (php-refactor-mode . [(20171124 635) nil "Minor mode to quickly and safely perform common refactorings" tar])
 (phpunit . [(20180829 1438) ((s (1 12 0)) (f (0 19 0)) (pkg-info (0 6)) (cl-lib (0 5)) (emacs (24 3))) "Launch PHP unit tests using phpunit" tar])
 (pip-requirements . [(20180602 1734) ((dash (2 8 0))) "A major mode for editing pip requirements files." tar])
 (pkg-info . [(20150517 1143) ((epl (0 8))) "Information about packages" tar])
 (plantuml-mode . [(20180816 1012) ((emacs (25 0))) "Major mode for PlantUML" tar])
 (popup . [(20160709 1429) ((cl-lib (0 5))) "Visual Popup User Interface" tar])
 (pos-tip . [(20150318 1513) nil "Show tooltip at point" tar])
 (prodigy . [(20180511 938) ((s (1 8 0)) (dash (2 4 0)) (f (0 14 0)) (emacs (24))) "Manage external services from within Emacs" tar])
 (projectile . [(20181003 2029) ((emacs (25 1)) (pkg-info (0 4))) "Manage and navigate projects in Emacs easily" tar])
 (pug-mode . [(20180513 2126) ((emacs (24 4)) (cl-lib (0 5))) "Major mode for jade/pug template files" tar])
 (pyvenv . [(20180831 847) nil "Python virtual environment interface" tar])
 (quelpa . [(20180907 2232) ((emacs (24 3))) "Emacs Lisp packages built directly from source" tar])
 (queue . [(0 2) nil "Queue data structure" tar])
 (quickrun . [(20170223 115) ((emacs (24 3))) "Run commands quickly" tar])
 (racer . [(20180709 625) ((emacs (24 3)) (rust-mode (0 2 0)) (dash (2 13 0)) (s (1 10 0)) (f (0 18 2)) (pos-tip (0 4 6))) "code completion, goto-definition and docs browsing for Rust via racer" tar])
 (rainbow-delimiters . [(20170929 1132) nil "Highlight brackets according to their depth" tar])
 (rainbow-mode . [(1 0 1) nil "Colorize color names in buffers" tar])
 (rake . [(20180212 1008) ((f (0 13 0)) (dash (1 5 0)) (cl-lib (0 5))) "Run rake commands" tar])
 (ranger . [(20170817 1557) ((emacs (24 4))) "Make dired more like ranger" tar])
 (request . [(20170201 147) ((emacs (24 4))) "Compatible layer for URL request in Emacs" tar])
 (restclient . [(20180316 1551) nil "An interactive HTTP client for Emacs" tar])
 (rjsx-mode . [(20180913 2224) ((emacs (24 4)) (js2-mode (20170504))) "Real support for JSX" tar])
 (rotate-text . [(20111203 2039) nil "cycle through words, symbols and patterns" tar])
 (rspec-mode . [(20180614 1148) ((ruby-mode (1 0)) (cl-lib (0 4))) "Enhance ruby-mode for RSpec" tar])
 (ruby-refactor . [(20160214 1650) ((ruby-mode (1 2))) "A minor mode which presents various Ruby refactoring helpers." tar])
 (rust-mode . [(20181001 2221) ((emacs (24 0))) "A major emacs mode for editing Rust source code" tar])
 (s . [(20180406 808) nil "The long lost Emacs string manipulation library." tar])
 (sass-mode . [(20161007 626) ((haml-mode (3 0 15)) (cl-lib (0 5))) "Major mode for editing Sass files" tar])
 (sesman . [(20180921 2220) ((emacs (25))) "Generic Session Manager" tar])
 (shackle . [(20171209 2201) ((cl-lib (0 5))) "Enforce rules for popups" tar])
 (shader-mode . [(20180518 1157) ((emacs (24))) "Major mode for shader" tar])
 (shrink-path . [(20170813 247) ((emacs (24)) (s (1 6 1)) (dash (1 8 0)) (f (0 10 0))) "fish-style path" tar])
 (shut-up . [(20180628 1830) ((cl-lib (0 3)) (emacs (24))) "Shut up would you!" tar])
 (simple-httpd . [(20180528 1603) ((cl-lib (0 3))) "pure elisp HTTP server" tar])
 (skewer-mode . [(20180706 1807) ((simple-httpd (1 4 0)) (js2-mode (20090723)) (emacs (24))) "live browser JavaScript, CSS, and HTML interaction" tar])
 (slime . [(20180923 1848) ((cl-lib (0 5)) (macrostep (0 9))) "Superior Lisp Interaction Mode for Emacs" tar])
 (smart-forward . [(20140430 713) ((expand-region (0 8 0))) "Semantic navigation" tar])
 (smartparens . [(20181003 1346) ((dash (2 13 0)) (cl-lib (0 3))) "Automatic insertion, wrapping and paredit-like navigation with user defined pairs." tar])
 (smex . [(20151212 2209) ((emacs (24))) "Mstyle fuzzy matching." tar])
 (solaire-mode . [(20180521 935) ((emacs (24 4)) (cl-lib (0 5))) "make certain buffers grossly incandescent" tar])
 (sourcekit . [(20180101 834) ((emacs (24 3)) (dash (2 12 1)) (dash-functional (1 2 0)) (request (0 2 0))) "Library to interact with sourcekittendaemon" tar])
 (spinner . [(1 7 3) nil "Add spinners and progressline for ongoing operations" tar])
 (ssh-deploy . [(20180819 546) ((emacs (24))) "Deployment via TRAMP, global or per directory." tar])
 (stripe-buffer . [(20141208 1508) ((cl-lib (1 0))) "Use a different background for even and odd lines" tar])
 (stylus-mode . [(20150313 1512) ((sws-mode (0))) "Major mode for editing .jade files" tar])
 (suggest . [(20180916 1859) ((emacs (24 4)) (loop (1 3)) (dash (2 13 0)) (s (1 11 0)) (f (0 18 2)) (spinner (1 7 3))) "suggest elisp functions that give the output requested" tar])
 (swift-mode . [(20180930 906) ((emacs (24 4)) (seq (2 3))) "Major-mode for Apple's Swift programming language." tar])
 (swiper . [(20180813 1625) ((emacs (24 1)) (ivy (0 9 0))) "Isearch with an overview. Oh, man!" tar])
 (sws-mode . [(20150317 1945) nil "(S)ignificant (W)hite(S)pace mode" tar])
 (tablist . [(20170220 335) ((emacs (24 3))) "Extended tabulatedmode" tar])
 (tern . [(20170925 2033) ((json (1 2)) (cl-lib (0 5)) (emacs (24))) "Tern-powered JavaScript integration" tar])
 (tide . [(20180810 403) ((dash (2 10 0)) (s (1 11 0)) (flycheck (27)) (typescript-mode (0 1)) (cl-lib (0 5))) "Typescript Interactive Development Environment" tar])
 (tldr . [(20180122 1112) ((emacs (24 3))) "tldr client for Emacs" tar])
 (toc-org . [(20180925 1533) nil "add table of contents to orgtoc)" tar])
 (toml-mode . [(20161107 1800) ((emacs (24)) (cl-lib (0 5))) "Major mode for editing TOML files" tar])
 (treepy . [(20180724 656) ((emacs (25 1))) "Generic tree traversal tools" tar])
 (typescript-mode . [(20180918 934) nil "Major mode for editing typescript" tar])
 (undo-tree . [(0 6 5) nil "Treat undo history as a tree" tar])
 (use-package . [(20180715 1801) ((emacs (24 3)) (bind-key (2 4))) "A configuration macro for simplifying your .emacs" tar])
 (vi-tilde-fringe . [(20141028 242) ((emacs (24))) "Displays tildes in the fringe on empty lines a la Vi." tar])
 (vimish-fold . [(20180101 612) ((emacs (24 4)) (cl-lib (0 5)) (f (0 18 0))) "Fold text like in Vim" tar])
 (vimrc-mode . [(20170815 137) nil "Major mode for vimrc files" tar])
 (visual-fill-column . [(20180919 757) ((emacs (24 3))) "fillmode" tar])
 (visual-regexp . [(20170301 116) ((cl-lib (0 2))) "A regexp/replace command for Emacs with interactive visual feedback" tar])
 (visual-regexp-steroids . [(20170222 253) ((visual-regexp (1 1))) "Extends visual-regexp to support other regexp engines" tar])
 (vlf . [(20180201 2254) nil "View Large Files" tar])
 (web-beautify . [(20161115 2247) nil "Format HTML, CSS and JavaScript/JSON" tar])
 (web-completion-data . [(20160318 848) nil "Shared completion data for acweb" tar])
 (web-mode . [(20180813 1350) ((emacs (23 1))) "major mode for editing web templates" tar])
 (websocket . [(20180423 16) ((cl-lib (0 5))) "Emacs WebSocket client and server" tar])
 (wgrep . [(20180711 626) nil "Writable grep buffer and apply the changes to files" tar])
 (which-key . [(20180621 1938) ((emacs (24 4))) "Display available keybindings in popup" tar])
 (with-editor . [(20180726 2044) ((emacs (24 4)) (async (1 9))) "Use the Emacsclient as $EDITOR" tar])
 (xcscope . [(20180426 712) nil "cscope interface for (X)Emacs" tar])
 (xref-js2 . [(20170530 826) ((emacs (25)) (js2-mode (20150909))) "Jump to references/definitions using ag & js2-mode's AST" tar])
 (yaml-mode . [(20180409 607) ((emacs (24 1))) "Major mode for editing YAML files" tar])
 (yankpad . [(20180825 939) ((emacs (24))) "Paste snippets from an org-mode file" tar])
 (yard-mode . [(20170817 1237) nil "Minor mode for Ruby YARD comments" tar])
 (yasnippet . [(20180916 2115) ((cl-lib (0 5))) "Yet another snippet extension for Emacs." tar])
 (zoutline . [(20180314 1759) nil "Simple outline library." tar])

 (let-alist . [(1 0 5) ((emacs (24 1))) "Easily letlist by their names" tar])
 (nlinum . [(1 8 1) nil "Show line numbers in the margin" tar])
 (nlinum-hl . [(20170614 48) ((emacs (24 4)) (nlinum (1 7)) (cl-lib (0 5))) "heal nlinum's line numbers" tar])
 (nlinum-relative . [(20160526 708) ((emacs (24 4)) (nlinum (1 5))) "Relative line number with nlinum" tar])
 (seq . [(2 20) nil "Sequence manipulation functions" tar])
 (auth-source-pass . [(20180529 1357) ((emacs (25))) "Integrate authstore" tar])
 (less-css-mode . [(20161001 453) nil "Major mode for editing LESS CSS files (lesscss.org)" tar])
 
 (treemacs . [(20180927 1224) ((emacs (25 2)) (cl-lib (0 5)) (dash (2 11 0)) (s (1 10 0)) (f (0 11 0)) (ace-window (0 9 0)) (pfuture (1 2)) (hydra (0 13 2)) (ht (2 2))) "A tree style file explorer package" tar])
 (treemacs-evil . [(20180803 1017) ((evil (1 2 12)) (treemacs (0))) "Evil mode integration for treemacs" tar])
 (treemacs-projectile . [(20180614 1721) ((projectile (0 14 0)) (treemacs (0))) "Projectile integration for treemacs" tar])
 (pfuture . [(20180922 1315) ((emacs (25 2))) "a simple wrapper around asynchronous processes" tar])

 (poet-theme . [(20180924 329) nil "A theme for prose." tar])
 (powerthesaurus . [(20180719 908) ((emacs (24)) (request (0 3 0)) (s (1 12 0))) "Powerthesaurus integration" tar])
 (define-word . [(20180706 2029) ((emacs (24 3))) "display the definition of word at point." tar])
 (company-box . [(20180607 1545) ((emacs (26 0 91)) (dash (2 13)) (dash-functional (1 2 0)) (company (0 9 6))) "Company front-end with icons" tar])
)
